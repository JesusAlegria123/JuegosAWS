<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aventura de Plataformas</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 50%, #7e22ce 100%);
            font-family: 'Arial', sans-serif;
            overflow: hidden;
        }
        .game-wrapper {
            position: relative;
            box-shadow: 0 10px 50px rgba(0, 0, 0, 0.5);
            border-radius: 15px;
            overflow: hidden;
        }
        canvas {
            display: block;
            background: linear-gradient(to bottom, #87CEEB 0%, #E0F6FF 100%);
        }
        .hud {
            position: absolute;
            top: 10px;
            left: 10px;
            right: 10px;
            display: flex;
            justify-content: space-between;
            color: white;
            font-size: 20px;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
            pointer-events: none;
            z-index: 10;
        }
        .hud-item {
            background: rgba(0, 0, 0, 0.5);
            padding: 10px 20px;
            border-radius: 10px;
            backdrop-filter: blur(5px);
        }
        .modal {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.95);
            padding: 40px;
            border-radius: 20px;
            border: 3px solid #ffd700;
            text-align: center;
            color: white;
            display: none;
            z-index: 100;
        }
        .modal h2 {
            font-size: 48px;
            margin-bottom: 20px;
            color: #ffd700;
            text-shadow: 0 0 20px #ffd700;
        }
        .modal p {
            font-size: 24px;
            margin: 15px 0;
        }
        .btn {
            margin-top: 20px;
            padding: 15px 40px;
            font-size: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 30px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
        }
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
        }
        .instructions {
            position: absolute;
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.7);
            padding: 10px 20px;
            border-radius: 10px;
            color: white;
            font-size: 14px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="game-wrapper">
        <div class="hud">
            <div class="hud-item">üíé Gemas: <span id="gems">0</span>/5</div>
            <div class="hud-item">‚è±Ô∏è Tiempo: <span id="time">60</span>s</div>
            <div class="hud-item">üìç Nivel: <span id="level">1</span></div>
        </div>
        <canvas id="gameCanvas" width="800" height="600"></canvas>
        <div class="instructions">
            ‚Üê ‚Üí para mover | ‚Üë o ESPACIO para saltar | Recoge todas las gemas y llega a la bandera
        </div>
        <div class="modal" id="winModal">
            <h2>üéâ ¬°NIVEL COMPLETADO! üéâ</h2>
            <p>Gemas: <span id="winGems">0</span></p>
            <p>Tiempo restante: <span id="winTime">0</span>s</p>
            <button class="btn" onclick="nextLevel()">Siguiente Nivel</button>
        </div>
        <div class="modal" id="gameOverModal">
            <h2>‚è∞ ¬°TIEMPO AGOTADO!</h2>
            <p>Nivel alcanzado: <span id="finalLevel">1</span></p>
            <button class="btn" onclick="restartGame()">Reintentar</button>
        </div>
        <div class="modal" id="victoryModal">
            <h2>üëë ¬°VICTORIA TOTAL! üëë</h2>
            <p>¬°Completaste todos los niveles!</p>
            <button class="btn" onclick="restartGame()">Jugar de Nuevo</button>
        </div>
    </div>

    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');
        
        const audioCtx = new (window.AudioContext || window.webkitAudioContext)();
        
        function playTone(freq, duration, type = 'sine', volume = 0.3) {
            const osc = audioCtx.createOscillator();
            const gain = audioCtx.createGain();
            
            osc.connect(gain);
            gain.connect(audioCtx.destination);
            
            osc.frequency.value = freq;
            osc.type = type;
            gain.gain.setValueAtTime(volume, audioCtx.currentTime);
            gain.gain.exponentialRampToValueAtTime(0.01, audioCtx.currentTime + duration);
            
            osc.start(audioCtx.currentTime);
            osc.stop(audioCtx.currentTime + duration);
        }
        
        function playJump() {
            playTone(400, 0.1, 'square', 0.2);
            setTimeout(() => playTone(600, 0.1, 'square', 0.15), 50);
        }
        
        function playGem() {
            playTone(800, 0.1, 'sine', 0.25);
            setTimeout(() => playTone(1000, 0.1, 'sine', 0.2), 50);
            setTimeout(() => playTone(1200, 0.15, 'sine', 0.15), 100);
        }
        
        function playWin() {
            const notes = [523, 659, 784, 1047];
            notes.forEach((note, i) => {
                setTimeout(() => playTone(note, 0.2, 'sine', 0.2), i * 100);
            });
        }
        
        function playLose() {
            playTone(400, 0.3, 'sawtooth', 0.2);
            setTimeout(() => playTone(300, 0.3, 'sawtooth', 0.2), 150);
            setTimeout(() => playTone(200, 0.5, 'sawtooth', 0.2), 300);
        }
        
        let gameState = {
            player: {
                x: 50,
                y: 450,
                width: 30,
                height: 40,
                velocityX: 0,
                velocityY: 0,
                speed: 5,
                jumpPower: 15,
                onGround: false
            },
            gems: [],
            platforms: [],
            goal: null,
            keys: {},
            currentLevel: 1,
            totalGems: 0,
            collectedGems: 0,
            timeLeft: 60,
            gameRunning: true,
            particles: []
        };
        
        const levels = [
            {
                platforms: [
                    {x: 0, y: 550, width: 800, height: 50},
                    {x: 200, y: 450, width: 150, height: 20},
                    {x: 450, y: 350, width: 150, height: 20},
                    {x: 250, y: 250, width: 100, height: 20},
                    {x: 550, y: 200, width: 150, height: 20}
                ],
                gems: [
                    {x: 250, y: 410},
                    {x: 500, y: 310},
                    {x: 280, y: 210},
                    {x: 600, y: 160},
                    {x: 700, y: 160}
                ],
                goal: {x: 750, y: 140}
            },
            {
                platforms: [
                    {x: 0, y: 550, width: 150, height: 50},
                    {x: 250, y:
